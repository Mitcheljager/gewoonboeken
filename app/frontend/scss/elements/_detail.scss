@use "sass:map";
@use "../variables" as *;
@use "../mixins" as *;

$gap: #{calc(map.get($breakpoints, max) / 16)};

.detail {
  @include max-width;
  display: grid;
  grid-template:
    "header header"
    "content image"
    "aside aside";
  grid-template-columns: 2fr 1fr;
  gap: 0 $gap;
  align-items: flex-start;
  padding-bottom: $margin * 4;

  @include breakpoint(max) {
    grid-template:
      "header header header"
      "aside image content";
    grid-template-columns: 1fr 300px 1fr;
  }
}

.detail__header {
  grid-area: header;
  margin: $margin * 10 0 $margin * 8;
  text-align: center;
}

.detail__subheader {
  font-size: $font-size-large;
  font-family: $font-stack-serif;
  opacity: var(--text-color-alt);
}

.detail__names {
  font-size: 1.5rem;

  a {
    color: inherit;
    text-decoration: none;

    @include hover-stack {
      color: inherit;
      text-decoration: underline;
      text-decoration-thickness: 2px;
    }
  }
}

.detail__aside {
  grid-area: aside;
  margin-top: $margin * 8;

  @include breakpoint(max) {
    margin-top: 0;
  }
}

.detail__image {
  z-index: 1;
  position: relative;
  grid-area: image;
  min-height: 10rem;
  width: 100%;
  margin: 0;
}

.detail__content {
  grid-area: content;
  position: relative;
  min-height: 100%;

  @include breakpoint(max) {
    max-width: unset;
  }

  > * {
    z-index: 1;
    position: relative;
  }

  &::after {
    @include pseudo-fill;
    z-index: 0;
    width: 100vw;
    min-height: calc(100% + $margin * 8);
    top: $margin * -4;
    left: auto;
    right: calc(-33% - $gap * 0.5);
    background: var(--bg-standout);
    border-radius: 0 $border-radius-huge $border-radius-huge 0;

    @include breakpoint(max) {
      width: 70vw;
      left: calc(($gap * -0.5) - (map.get($breakpoints, max) / 3 / 2));
      right: auto;
      border-radius: $border-radius-huge 0 0 $border-radius-huge;
    }
  }
}

