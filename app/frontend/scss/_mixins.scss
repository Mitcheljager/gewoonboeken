@use "sass:map";
@use "variables" as *;

@mixin breakpoint($media) {
  $value: $media;

  @if map.has-key($breakpoints, $media) {
    $value: map.get($breakpoints, $media);
  }

  @media (min-width: #{ $value }) {
    @content;
  }
}

@mixin max-width() {
  $padding: #{$margin * 3};
  max-width: calc(map.get($breakpoints, max) + $padding * 2);
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
}

@mixin hover-stack() {
  &:hover:not([disabled]),
  &:active:not([disabled]),
  &:focus-visible:not([disabled]) {
    @content;
  }
}

@mixin hover-grow($scale: 1.05) {
  transition: scale 50ms;

  @include hover-stack {
    scale: $scale;
  }

  &:active {
    scale: 1;
  }
}

@mixin motion() {
  @media (prefers-reduced-motion: no-preference) {
    @content;
  }
}

@mixin focus-visible-outline($prepend: '') {
  outline-offset: 0;

  @include motion {
    transition: outline-offset 100ms, outline-color;
  }

  &:focus-visible {
    outline: 2px solid currentColor;

    &:not(:active) {
      @if $prepend == inset {
        outline-offset: -2px;
      } @else {
        outline-offset: 3px;
      }
    }
  }
}

@mixin pseudo-fill() {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin dark() {
  @media (prefers-color-scheme: dark) {
    html:not([style*="color-scheme: light"]) & {
      @content;
    }
  }

  html[style*="color-scheme: dark"] & {
    @content;
  }
}
